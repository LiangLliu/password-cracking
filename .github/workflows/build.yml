name: Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: password-cracking-linux-amd64

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: password-cracking-linux-arm64
            use-cross: true

          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            name: password-cracking-linux-i686
            use-cross: true

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: password-cracking-linux-amd64-musl
            use-cross: true

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            name: password-cracking-linux-arm64-musl
            use-cross: true

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            name: password-cracking-macos-amd64

          - os: macos-latest
            target: aarch64-apple-darwin
            name: password-cracking-macos-arm64

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: password-cracking-windows-amd64.exe

          - os: windows-latest
            target: i686-pc-windows-msvc
            name: password-cracking-windows-i686.exe

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            name: password-cracking-windows-arm64.exe

    steps:
      - uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        if: matrix.use-cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build (cargo)
        if: ${{ !matrix.use-cross }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build (cross)
        if: ${{ matrix.use-cross }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Package Binary
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/password-cracking.exe ${{ matrix.name }}
          else
            cp target/${{ matrix.target }}/release/password-cracking ${{ matrix.name }}
          fi

      - name: Create tarball (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          tar -czf ${{ matrix.name }}.tar.gz ${{ matrix.name }} README.md LICENSE* || tar -czf ${{ matrix.name }}.tar.gz ${{ matrix.name }} README.md

      - name: Create zip (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          7z a ${{ matrix.name }}.zip ${{ matrix.name }} README.md LICENSE* || 7z a ${{ matrix.name }}.zip ${{ matrix.name }} README.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.zip
          if-no-files-found: error

      - name: Generate SHA256 checksum
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            sha256sum ${{ matrix.name }}.zip > ${{ matrix.name }}.zip.sha256
          else
            sha256sum ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256
          fi

      - name: Upload checksum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-checksum
          path: |
            *.sha256
          if-no-files-found: error